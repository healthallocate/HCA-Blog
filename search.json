[
  {
    "objectID": "posts/test_blog.html",
    "href": "posts/test_blog.html",
    "title": "Propensity score matching",
    "section": "",
    "text": "In this post, we will explain the methodology and applications of propensity score matching.\nThe purpose of propensity score matching is to identify observations where the covariates that determine assignment to a particular group have similar values across different groups. In our example, we want to identify recipients of single kidney transplants whose Expected Post Transplant Survival (EPTS) characteristics are similar to those of recipients of en bloc kidneys. By identifying such patients, we will be able to better compare post-transplant survival outcomes by accounting for other possible confounding factors. In this case, these covariates are age, dialysis, diabetes, and previous transplant.\nNote that we did not match based on donor characteristics. This is because after donor kidneys are assigned a sequence, they are treated equally to other kidneys in that sequence, so donor characteristics have no additional influence on assignment to each patient. When propensity score matching it is important to match only on those covariates which impact assignment of the treatment to each group.\nHere’s a look at our dataframe:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPX_ID\nenbloc_under8\nREC_AGE_AT_TX\ndialysis_duration\nno_dial\nrec_diabetes\nCAN_PREV_TX\n\n\n\n\n1\n1423051\n0\n46\n1.7397260\n0\n0\n0\n\n\n33\n1336277\n0\n64\n0.0000000\n1\n1\n0\n\n\n46\n1375918\n0\n25\n0.0000000\n1\n0\n1\n\n\n73\n1384452\n0\n51\n0.0000000\n1\n1\n0\n\n\n80\n1331786\n0\n66\n2.7315068\n0\n1\n0\n\n\n101\n1337163\n0\n43\n1.8246575\n0\n0\n0\n\n\n104\n1331806\n0\n67\n0.4958904\n0\n1\n0\n\n\n106\n1421143\n0\n51\n0.0000000\n1\n0\n0\n\n\n107\n1343445\n0\n43\n0.6136986\n0\n0\n0\n\n\n109\n1351642\n0\n57\n0.9260274\n0\n0\n0\n\n\n\n\n\n\nPX_ID is a unique patient identifier\nenbloc_under8 is an indicator for whether the patient received an en bloc kidney from a donor weighing &lt; 8kg\nREC_AGE_AT_TX is the recipient’s age at time of transplant\ndialysis_duration is the time in years that a patient was on dialysis before transplant\nno_dial is an indicator for whether the patient never received dialysis\nrec_diabetes is an indicator for whether the patient had diabetes\nCAN_PREV_TX is an indicator for whether the patient had received a transplant previously.\n\nIn this example, we are going to do 1-to-1 matching, where for each recipient of an ebloc from a donor &lt; 8kg, we are finding 1 recipient of a sequence A SKT with similar characteristics. This is the most common form of propensity score matching but not the only (see Austin 2011)\nTo perform propensity score matching, we use the MatchIt library in R. To ensure that the covariates are sufficiently similar, we include cross terms that allow the standardized mean differences of the covariates to be &lt; 0.1.\n\nmatch_obj = matchit(enbloc_under8 ~ REC_AGE_AT_TX + dialysis_duration + no_dial + rec_diabetes + CAN_PREV_TX + REC_AGE_AT_TX*no_dial + REC_AGE_AT_TX*rec_diabetes, data = seq_a_data_under, method = \"nearest\", distance =\"glm\",\n  ratio = 1,\n  replace = FALSE)\n\nModel specifications:\n\nmethod = “nearest” specifies nearest neighbor matching\ndistance = “glm” specifies the estimation of propensity scores using logistic regression\nratio = 1 specifies 1:1 matching\nreplace = “FALSE” specifies a unique SKT match for each en bloc recipient\n\nTo return a dataset from this matching process, use the match.data() function as follows:\n\nmatch_data_under = match.data(match_obj)\n\nTo visualize the standardized mean differences in the covariates, use the love.plot() function from the cobalt library\n\nlove.plot(match_obj, stats = \"m\", binary = \"std\", threshold = .1, \n          var.order = \"unadjusted\", var.names = v)\n\n\n\n\n\n\n\n\n\nstats = “m” specifies the calculation of mean differences\nbinary = “std” specifies the standardized mean difference\nthreshold = 0.1 includes boundary lines at -0.1 and 0.1 to display the threshold\nvar.order = “unadjusted” displays the variables in order from smallest to largest unadjusted standardized mean difference\nvar.names = v displays the vector v that describes the variable names\n\nAs we can see in the love plot, without matching, recipients of en blocs from donors &lt; 8kg have significantly different values of EPTS characteristics than recipients of sequence A SKTs. By matching on these characteristics, we are able to identify patients who have similar values for these characteristics, leading to standardized mean differences that are all below 0.1.\nReferences:\nAustin PC. An Introduction to Propensity Score Methods for Reducing the Effects of Confounding in Observational Studies. Multivariate Behav Res. 2011;46(3):399-424. doi:10.1080/00273171.2011.568786"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HCA Blog",
    "section": "",
    "text": "Welcome to the Healthcare Allocation Lab Blog!\nHere you will find instructional posts on best statistical practices when working with data from the Scientific Registry of Transplant Recipients (SRTR).\nFor source code from our projects, please visit https://github.com/healthallocate\n\n\nPosts\n\n\n\n\n\n\n\n\n\n\n\n\n\nPropensity score matching\n\n\n\nAnalysis\n\n\nKidney Allocation\n\n\nR\n\n\n\n\n\n\n\nMolly White\n\n\nFeb 7, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  }
]